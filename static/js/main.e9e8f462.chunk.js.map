{"version":3,"sources":["Navbar/Navbar.js","SortingAlgorithms/mergeSort.js","SortingAlgorithms/quickSort.js","SortingAlgorithms/heapSort.js","SortingVisualizer/SortingVisualizer.js","SortingAlgorithms/linearSort.js","SortingAlgorithms/bubbleSort.js","SortingAlgorithms/insertionSort.js","SortingAlgorithms/selectionSort.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","document","getElementById","disabled","this","props","selectAlgorithm","resetArray","sort","changeAnimationSpeed","className","onClick","id","type","min","max","defaultValue","onChange","options","label","value","React","Component","getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","quickSort","lb","ub","partitionPoint","e","f","num","g","partition","getHeapSortAnimations","size","m","startIndex","heapSort","window","innerWidth","innerHeight","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","ANIMATION_SPEED_MS","SECONDARY_COLOR","SortingVisualizer","state","algorithm","bind","event","setState","target","refs","navbar","disableNavbarElements","selectionSort","insertionSort","bubbleSort","linearSort","mergeSort","alert","random","enableNavbarElements","preventDefault","stopPropagation","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","getLinearSortAnimations","getBubbleSortAnimations","y","getInsertionSortAnimations","getSelectionSortAnimations","ref","map","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e9e8f462.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport './Navbar.scss';\n\nexport default class Navbar extends React.Component {\n  disableNavbarElements() {\n      document.getElementById('sortButton').disabled=true;\n      document.getElementById('speedSlider').disabled=true;\n  }\n\n  enableNavbarElements() {\n      document.getElementById('sortButton').disabled=false;\n      document.getElementById('speedSlider').disabled=false;\n  }\n\n  render() {\n    const options = [\n      {label: \"Merge Sort\", value: \"MERGE_SORT\"},\n      {label: \"Quick Sort\", value: \"QUICK_SORT\"},\n      {label: \"Insertion Sort\", value: \"INSERTION_SORT\"},\n      {label: \"Bubble Sort\", value: \"BUBBLE_SORT\"},\n      {label: \"Linear Sort\", value: \"LINEAR_SORT\"},\n      {label: \"Selection Sort\", value: \"SELECTION_SORT\"},\n      {label: \"Heap Sort\", value: \"HEAP_SORT\"},\n  ];\n\n  const { selectAlgorithm, resetArray, sort, changeAnimationSpeed } = this.props;\n\n    return (\n      <nav className=\"navBar\">\n        <div className=\"dropDown\">\n          <button onClick={resetArray} id=\"resetButton\">Reset Array</button>\n          <button onClick={sort} id=\"sortButton\">Sort</button>\n          <input id=\"speedSlider\" type=\"range\" className=\"custom-range\" min={0} max={100} defaultValue={50} onChange={changeAnimationSpeed}/>\n          <Select id=\"algorithmDropdown\" onChange={selectAlgorithm} className=\"selectStyle\" options={options}></Select>\n        </div>\n      </nav>\n    )\n  }\n}","export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}","export function getQuickSortAnimations(array) {\n  if(array.length < 0) return array;\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  quickSort(auxiliaryArray,0, auxiliaryArray.length-1, animations);\n  return animations;\n}\n\nfunction quickSort(auxiliaryArray, lb, ub, animations) {\n  let partitionPoint;\n  if(ub<=lb) {\n    return;\n  }\n  partitionPoint = partition(auxiliaryArray, lb, ub, animations);\n  quickSort(auxiliaryArray,lb,partitionPoint-1,animations);\n  quickSort(auxiliaryArray,partitionPoint+1,ub,animations);\n}\n\nfunction partition(auxiliaryArray,lb,ub,animations) {\n  let e,f,num;\n  num=auxiliaryArray[lb];\n  e=lb;\n  f=ub;\n  while(1) {\n    while(1) {\n      if(e===ub || auxiliaryArray[e]>num) break;\n      animations.push([0,e,e]);\n      animations.push([0,e,e]);\n      e++;\n    }\n    while(1) {\n      if(f===lb || auxiliaryArray[f]<=num) break;\n      animations.push([0,f,f]);\n      animations.push([0,f,f]);\n      f--;\n    }\n    if(e<f) {\n      animations.push([0,e,f]);\n      animations.push([0,e,f]);\n      animations.push([1,e,auxiliaryArray[f]]);\n      animations.push([1,f,auxiliaryArray[e]]);\n      let g=auxiliaryArray[e];\n      auxiliaryArray[e]=auxiliaryArray[f];\n      auxiliaryArray[f]=g;\n    }\n    else {\n      animations.push([0,lb,f]);\n      animations.push([0,lb,f]);\n      animations.push([1,lb,auxiliaryArray[f]]);\n      animations.push([1,f,auxiliaryArray[lb]]);\n      let g=auxiliaryArray[lb];\n      auxiliaryArray[lb]=auxiliaryArray[f];\n      auxiliaryArray[f]=g;\n      break;\n    }\n  }\n  return f;\n}","export function getHeapSortAnimations(array) {\n  if(array.length<0) return array;\n  const auxiliaryArray = array.slice();\n  const animations = [];\n  heapSort(auxiliaryArray,auxiliaryArray.length,animations);\n  return animations;\n}\n\nfunction heapSort(auxiliaryArray,size,animations) {\n  let k,j,i,m,g;\n  let startIndex=0;\n  i=1;\n  while(i<size) {\n    m=i;\n    do {\n      k=Math.floor((m-1)/2);\n      if(auxiliaryArray[k]<auxiliaryArray[m]) {\n        animations.push([k,m]);\n        animations.push([k,m]);\n        animations.push([k,auxiliaryArray[m]]);\n        animations.push([m,auxiliaryArray[k]]);\n        g=auxiliaryArray[k];\n        auxiliaryArray[k]=auxiliaryArray[m];\n        auxiliaryArray[m]=g;\n      }\n      m=k;\n    }while(m!==0)\n    i++;\n  }\n  for(j=size-1;j>=0;j--) {\n    animations.push([startIndex,j]);\n    animations.push([startIndex,j]);\n    animations.push([startIndex,auxiliaryArray[j]]);\n    animations.push([j,auxiliaryArray[startIndex]]);\n    g=auxiliaryArray[startIndex];\n    auxiliaryArray[startIndex]=auxiliaryArray[j];\n    auxiliaryArray[j]=g;\n    k=0;\n    do {\n      m=2*k+1;\n      if(auxiliaryArray[m]<auxiliaryArray[m+1] && m<j-1) {\n        m++;\n      }\n      if(auxiliaryArray[k]<auxiliaryArray[m] && m<j) {\n        animations.push([k,m]);\n        animations.push([k,m]);\n        animations.push([k,auxiliaryArray[m]]);\n        animations.push([m,auxiliaryArray[k]]);\n        g=auxiliaryArray[k];\n        auxiliaryArray[k]=auxiliaryArray[m];\n        auxiliaryArray[m]=g;\n      }\n      k=m;\n    }while(m<j);\n  }\n}","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './SortingVisualizer.scss';\nimport { getMergeSortAnimations } from '../SortingAlgorithms/mergeSort';\nimport { getLinearSortAnimations } from '../SortingAlgorithms/linearSort';\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/bubbleSort';\nimport { getInsertionSortAnimations } from '../SortingAlgorithms/insertionSort';\nimport { getQuickSortAnimations } from '../SortingAlgorithms/quickSort';\nimport { getSelectionSortAnimations } from '../SortingAlgorithms/selectionSort';\nimport { getHeapSortAnimations } from '../SortingAlgorithms/heapSort';\n\nconst { innerWidth, innerHeight } = window;\nconst NUMBER_OF_ARRAY_BARS = Math.floor((innerWidth-200)/25);\nconst PRIMARY_COLOR = 'turquoise';\nlet ANIMATION_SPEED_MS = 1;\nconst SECONDARY_COLOR = 'red';\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      algorithm: '',\n    };\n    this.resetArray = this.resetArray.bind(this);\n    this.selectAlgorithm = this.selectAlgorithm.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  selectAlgorithm(event) {\n    this.setState({\n      algorithm: event.value\n    });\n  }\n\n  changeAnimationSpeed(event) {\n    ANIMATION_SPEED_MS = event.target.value;\n  }\n\n  sort(event) {\n    if(this.state.algorithm === '') {\n      alert('Select an algorithm');\n      return;\n    }\n    this.refs.navbar.disableNavbarElements();\n    if(this.state.algorithm === 'MERGE_SORT') {\n      this.mergeSort(event);\n      return;\n    }\n    if(this.state.algorithm === 'LINEAR_SORT') {\n      this.linearSort(event);\n      return;\n    }\n    if(this.state.algorithm === 'BUBBLE_SORT') {\n      this.bubbleSort(event);\n      return;\n    }\n    if(this.state.algorithm === 'INSERTION_SORT') {\n      this.insertionSort(event);\n      return;\n    }\n    if(this.state.algorithm === 'QUICK_SORT') {\n      this.quickSort(event);\n      return;\n    }\n    if(this.state.algorithm === 'SELECTION_SORT') {\n      this.selectionSort(event);\n      return;\n    }\n    if(this.state.algorithm === 'HEAP_SORT') {\n      this.heapSort(event);\n      return;\n    }\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, innerHeight-145));\n    }\n    this.refs.navbar.enableNavbarElements();\n    this.setState({\n      array,\n    });\n  }\n\n  heapSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getHeapSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      let isColorChange;\n      if(i%4 === 2 || i%4 === 3) isColorChange=false;\n      else isColorChange=true;\n      // const isColorChange = (i % 4 !== 2 || i % 4 !== 3);\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = (i % 4 === 0)? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  mergeSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getMergeSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  linearSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getLinearSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      let isColorChange;\n      if(i%4 === 2 || i%4 === 3) isColorChange=false;\n      else isColorChange=true;\n      // const isColorChange = (i % 4 !== 2 || i % 4 !== 3);\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = (i % 4 === 0)? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  bubbleSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getBubbleSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      let isColorChange;\n      if(i % 4 === 2 || i % 4 === 3) isColorChange=false;\n      else isColorChange=true;\n      // const isColorChange = (i % 4 !== 2 || i % 4 !== 3);\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = (i % 4 === 0)? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  insertionSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getInsertionSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  quickSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getQuickSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      if (animations[i][0]===0) {\n        const [index, barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 2 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [index, barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  selectionSort(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const animations = getSelectionSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      if (animations[i][0]===0) {\n        const [index, barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 2 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [index, barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n  \n  render() {\n    const { array } = this.state;\n\n    return (\n      <div>\n        <Navbar ref=\"navbar\" resetArray={this.resetArray} sort={this.sort} selectAlgorithm={this.selectAlgorithm} changeAnimationSpeed={this.changeAnimationSpeed}></Navbar>\n        <div className=\"array-container\">\n          {array.map((value, idx) => (\n            <div\n              className=\"array-bar\"\n              key={idx}\n              style={{\n                backgroundColor: PRIMARY_COLOR,\n                height: `${value}px`\n              }}></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getLinearSortAnimations(array) {\n  const animations = [];\n  if(array.length<=1) return array;\n  const auxiliaryArray = array.slice();\n  const size = auxiliaryArray.length;\n  for(let i=0;i<size-1;i++) {\n    for(let j=i+1;j<size;j++) {\n      if(auxiliaryArray[i]<auxiliaryArray[j]) {\n        animations.push([i,j]);\n        animations.push([i,j]);\n        animations.push([i, auxiliaryArray[i]]);\n        animations.push([j, auxiliaryArray[j]]);\n      }\n      else {\n        animations.push([i,j]);\n        animations.push([i,j]);\n        animations.push([i, auxiliaryArray[j]]);\n        animations.push([j, auxiliaryArray[i]]);\n        let g = auxiliaryArray[i];\n        auxiliaryArray[i] = auxiliaryArray[j];\n        auxiliaryArray[j] = g;\n      }\n    }\n  }\n  return animations;\n}","export function getBubbleSortAnimations(array) {\n  if(array.length <= 0) return array;\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  const size = auxiliaryArray.length;\n  let m = size-2;\n  while(m>=0) {\n    let e=0;\n    let f=1;\n    while(e<=m) {\n      if(auxiliaryArray[e]>auxiliaryArray[f]) {\n        animations.push([e,f]);\n        animations.push([e,f]);\n        animations.push([e,auxiliaryArray[f]]);\n        animations.push([f,auxiliaryArray[e]]);\n        let g=auxiliaryArray[e];\n        auxiliaryArray[e]=auxiliaryArray[f];\n        auxiliaryArray[f]=g;\n      }\n      else {\n        animations.push([e,f]);\n        animations.push([e,f]);\n        animations.push([e,auxiliaryArray[e]]);\n        animations.push([f,auxiliaryArray[f]]);\n      }\n      e++;\n      f++;\n    }\n    m--;\n  }\n  return animations;\n}","export function getInsertionSortAnimations(array) {\n  if(array.length < 0) return array;\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  let lb = 0;\n  let ub = auxiliaryArray.length - 1;\n  let y = lb + 1;\n  let num,j;\n  while(y<=ub) {\n    num=auxiliaryArray[y];\n    j=y-1;\n    while(j>=lb && auxiliaryArray[j]>num) {\n      animations.push([j,j+1]);\n      animations.push([j,j+1]);\n      animations.push([j+1, auxiliaryArray[j]]);\n      auxiliaryArray[j+1]=auxiliaryArray[j];\n      j--;\n    }\n    animations.push([j+1,j+1]);\n    animations.push([j+1,j+1]);\n    animations.push([j+1,num]);\n    auxiliaryArray[j+1]=num;\n    y++;\n  }\n  return animations;\n}","export function getSelectionSortAnimations(array) {\n  if(array.length<0) return;\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  selectionSort(auxiliaryArray, auxiliaryArray.length, animations);\n  return animations;\n}\n\nfunction selectionSort(auxiliaryArray, size, animations) {\n  let e,f,m,g;\n  e=0;\n  while(e<=size-2) {\n    m=e;\n    f=e+1;\n    while(f<=size-1) {\n      animations.push([0,m,f]);\n      animations.push([0,m,f]);\n      if(auxiliaryArray[f]<auxiliaryArray[m]) m=f;\n      f++;\n    }\n    animations.push([0,e,m]);\n    animations.push([0,e,m]);\n    animations.push([1,e,auxiliaryArray[m]]);\n    animations.push([1,m,auxiliaryArray[e]]);\n    g=auxiliaryArray[e];\n    auxiliaryArray[e]=auxiliaryArray[m];\n    auxiliaryArray[m]=g;\n    e++;\n  }\n}","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}